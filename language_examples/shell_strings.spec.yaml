- source: '#'
  scopesBegin:
    - comment.line
    - punctuation.definition.comment
- source: '#'
- source: '#'
  scopesEnd:
    - punctuation.definition.comment
- source: ' DONT EDIT ME; EDIT ./build_helper/default.nix'
- source: '#'
  scopesBegin:
    - punctuation.definition.comment
- source: '#'
  scopesEnd:
    - comment.line
    - punctuation.definition.comment
- source: '{'
  scopesBegin:
    - meta.punctuation.section.bracket
  scopes:
    - punctuation.section.bracket
- source: '#'
  scopesBegin:
    - comment.line
  scopes:
    - punctuation.definition.comment
- source: ' local install command:'
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: '     nix-env -i -f ./  '
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: ' or'
- source: '#'
  scopes:
    - punctuation.definition.comment
- source: '     nix profile install ./'
  scopesEnd:
    - comment.line
- source: _core
  scopesBegin:
    - meta.punctuation.section.function
    - meta.punctuation.section.parameters
  scopes:
    - variable.parameter.function
    - variable.other.object.parameter
- source: '?'
  scopesBegin:
    - meta.default
  scopes:
    - punctuation.separator.default
- source: builtins
  scopes:
    - support.module
    - variable.language.special.builtins
  scopesEnd:
    - meta.default
- source: ','
  scopes:
    - punctuation.separator.comma
- source: system
  scopes:
    - variable.parameter.function
    - variable.other.object.parameter
- source: '?'
  scopesBegin:
    - meta.default
  scopes:
    - punctuation.separator.default
- source: _core
  scopes:
    - variable.other.object.access
    - variable.parameter
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: currentSystem
  scopes:
    - variable.other.property.last
  scopesEnd:
    - meta.default
- source: ','
  scopes:
    - punctuation.separator.comma
- source: _pkgs
  scopes:
    - variable.parameter.function
    - variable.other.object.parameter
- source: '?'
  scopesBegin:
    - meta.default
  scopes:
    - punctuation.separator.default
- source: (
  scopes:
    - punctuation.section.parentheses
- source: _core
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: import
  scopes:
    - entity.name.function.method
- source: (
  scopes:
    - punctuation.section.parentheses
- source: _core
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: fetchTarball
  scopes:
    - entity.name.function.method
- source: (
  scopes:
    - punctuation.section.parentheses
- source: '{'
  scopesBegin:
    - meta.punctuation.section.bracket
  scopes:
    - punctuation.section.bracket
- source: url
  scopesBegin:
    - meta.attribute-set
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '"'
  scopesBegin:
    - meta.statement
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: >-
    https://github.com/NixOS/nixpkgs/archive/ab7b6889ae9d484eed2876868209e33eb262511d.tar.gz
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: sha256
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: 'sha256:0wl2rq7jxr7b0g0inxbh9jgiifamn9i45p7fgra8rhhnrmcdlqjz'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.statement
- source: '}'
  scopes:
    - punctuation.section.bracket
  scopesEnd:
    - meta.punctuation.section.bracket
    - meta.attribute-set
- source: )
  scopesBegin:
    - punctuation.section.parentheses
- source: )
- source: (
  scopesEnd:
    - punctuation.section.parentheses
- source: '{'
  scopesBegin:
    - meta.punctuation.section.bracket
  scopes:
    - punctuation.section.bracket
- source: system
  scopesBegin:
    - meta.attribute-set
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: system
  scopesBegin:
    - meta.statement
  scopes:
    - variable.other.object
    - variable.parameter
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: overlays
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '['
  scopesBegin:
    - meta.list
    - punctuation.definition.list
- source: ']'
  scopesEnd:
    - meta.list
    - punctuation.definition.list
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.statement
- source: '}'
  scopes:
    - punctuation.section.bracket
  scopesEnd:
    - meta.punctuation.section.bracket
    - meta.attribute-set
- source: )
  scopesBegin:
    - punctuation.section.parentheses
- source: )
  scopesEnd:
    - meta.default
    - punctuation.section.parentheses
- source: ','
  scopes:
    - punctuation.separator.comma
- source: makeLibraryPath
  scopes:
    - variable.parameter.function
    - variable.other.object.parameter
- source: '?'
  scopesBegin:
    - meta.default
  scopes:
    - punctuation.separator.default
- source: _pkgs
  scopes:
    - variable.other.object.access
    - variable.parameter
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: lib
  scopes:
    - variable.other.object.property
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: makeLibraryPath
  scopes:
    - variable.other.property.last
  scopesEnd:
    - meta.default
- source: ','
  scopes:
    - punctuation.separator.comma
- source: _src
  scopes:
    - variable.parameter.function
    - variable.other.object.parameter
- source: '?'
  scopesBegin:
    - meta.default
  scopes:
    - punctuation.separator.default
- source: .
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
  scopes:
    - punctuation.definition.relative
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: build_helper
  scopesEnd:
    - meta.default
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: ','
  scopes:
    - punctuation.separator.comma
- source: deno
  scopes:
    - variable.parameter.function
    - variable.other.object.parameter
- source: '?'
  scopesBegin:
    - meta.default
  scopes:
    - punctuation.separator.default
- source: _pkgs
  scopes:
    - variable.other.object.access
    - variable.parameter
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: deno
  scopes:
    - variable.other.property.last
  scopesEnd:
    - meta.default
- source: ','
  scopes:
    - punctuation.separator.comma
- source: bash
  scopes:
    - variable.parameter.function
    - variable.other.object.parameter
- source: '?'
  scopesBegin:
    - meta.default
  scopes:
    - punctuation.separator.default
- source: _pkgs
  scopes:
    - variable.other.object.access
    - variable.parameter
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: bash
  scopes:
    - variable.other.property.last
  scopesEnd:
    - meta.default
- source: ','
  scopes:
    - punctuation.separator.comma
- source: coreutils
  scopes:
    - variable.parameter.function
    - variable.other.object.parameter
- source: '?'
  scopesBegin:
    - meta.default
  scopes:
    - punctuation.separator.default
- source: _pkgs
  scopes:
    - variable.other.object.access
    - variable.parameter
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: coreutils
  scopes:
    - variable.other.property.last
  scopesEnd:
    - meta.default
- source: ','
  scopes:
    - punctuation.separator.comma
- source: unzip
  scopes:
    - variable.parameter.function
    - variable.other.object.parameter
- source: '?'
  scopesBegin:
    - meta.default
  scopes:
    - punctuation.separator.default
- source: _pkgs
  scopes:
    - variable.other.object.access
    - variable.parameter
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: unzip
  scopes:
    - variable.other.property.last
  scopesEnd:
    - meta.default
- source: ','
  scopes:
    - punctuation.separator.comma
- source: '}'
  scopes:
    - punctuation.section.bracket
- source: ':'
  scopes:
    - punctuation.definition.function.colon
  scopesEnd:
    - meta.punctuation.section.bracket
    - meta.punctuation.section.function
    - meta.punctuation.section.parameters
- source: let
  scopesBegin:
    - meta.punctuation.section.let
  scopes:
    - keyword.control.let
- source: autopatchelf
  scopesBegin:
    - meta.let.in.part1
    - meta.statement
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: (
  scopes:
    - punctuation.section.parentheses
- source: _pkgs
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: stdenv
  scopes:
    - variable.other.object.property
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: mkDerivation
  scopes:
    - entity.name.function.method
- source: '{'
  scopesBegin:
    - meta.punctuation.section.bracket
  scopes:
    - punctuation.section.bracket
- source: name
  scopesBegin:
    - meta.attribute-set
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '"'
  scopesBegin:
    - meta.statement
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: autopatchelf
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.statement
- source: buildCommand
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: ''''''
  scopesBegin:
    - string.quoted.other.shell
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
- source: mkdir
  scopesBegin:
    - source.shell
    - meta.statement.command.shell
  scopes:
    - meta.statement.command.name.shell
    - entity.name.function.call.shell
    - entity.name.command.shell
- source: '-'
  scopesBegin:
    - string.unquoted.argument.shell
  scopes:
    - constant.other.option.dash.shell
- source: p
  scopes:
    - constant.other.option.shell
  scopesEnd:
    - string.unquoted.argument.shell
- source: $
  scopesBegin:
    - meta.argument.shell
  scopes:
    - punctuation.definition.variable.shell
    - variable.other.normal.shell.shell
- source: out
  scopes:
    - variable.other.normal.shell
- source: /bin
  scopes:
    - string.unquoted.argument.shell
  scopesEnd:
    - meta.argument.shell
- source: cp
  scopes:
    - meta.statement.command.name.shell
    - entity.name.function.call.shell
    - entity.name.command.shell
  scopesEnd:
    - source.shell
    - meta.statement.command.shell
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: .
  scopesBegin:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
  scopes:
    - punctuation.definition.relative
    - storage.type.modifier
- source: /
  scopes:
    - punctuation.definition.path
    - storage.type.modifier
- source: autopatchelf
  scopesEnd:
    - string.unquoted.path
    - punctuation.section.regexp
    - punctuation.section.path
    - storage.type.modifier
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: $
  scopesBegin:
    - source.shell
    - meta.statement.command.shell
    - meta.statement.command.name.shell
  scopes:
    - punctuation.definition.variable.shell
    - variable.other.normal.shell.shell
- source: out
  scopes:
    - variable.other.normal.shell
- source: /
  scopesBegin:
    - string.unquoted.shell
- source: b
- source: i
- source: 'n'
- source: /
- source: a
- source: u
- source: t
- source: o
- source: p
- source: a
- source: t
- source: c
- source: h
- source: e
- source: l
- source: f
  scopesEnd:
    - string.unquoted.shell
- source: sed
  scopes:
    - entity.name.function.call.shell
    - entity.name.command.shell
  scopesEnd:
    - meta.statement.command.name.shell
- source: '-'
  scopesBegin:
    - string.unquoted.argument.shell
  scopes:
    - constant.other.option.dash.shell
- source: i
  scopes:
    - constant.other.option.shell
  scopesEnd:
    - string.unquoted.argument.shell
- source: \
  scopes:
    - meta.argument.shell
    - constant.character.escape.line-continuation.shell
- source: '-e'
  scopes:
    - meta.statement.command.name.shell
    - entity.name.function.call.shell
    - entity.name.command.shell
- source: '"'
  scopesBegin:
    - meta.argument.shell
    - string.quoted.double.shell
  scopes:
    - punctuation.definition.string.begin.shell
- source: s
  scopes:
    - string.unquoted.argument.shell
- source: '|'
- source: file
  scopes:
    - string.unquoted.argument.shell
- source: ' |'
- source: ''''''
  scopes:
    - constant.character.escape.nix.shell
- source: $
  scopes:
    - punctuation.definition.variable.shell
- source: '{'
  scopes:
    - punctuation.section.bracket.curly.variable.begin.shell
    - punctuation.definition.variable.shell
- source: file
  scopes:
    - meta.parameter-expansion.shell
    - variable.other.normal.shell
- source: '}'
  scopes:
    - punctuation.section.bracket.curly.variable.end.shell
    - punctuation.definition.variable.shell
- source: /bin/file
  scopes:
    - string.unquoted.argument.shell
- source: ' |'
- source: '"'
  scopes:
    - punctuation.definition.string.end.shell
  scopesEnd:
    - string.quoted.double.shell
- source: \
  scopes:
    - constant.character.escape.line-continuation.shell
  scopesEnd:
    - meta.argument.shell
- source: '-e'
  scopes:
    - meta.statement.command.name.shell
    - entity.name.function.call.shell
    - entity.name.command.shell
- source: '"'
  scopesBegin:
    - meta.argument.shell
    - string.quoted.double.shell
  scopes:
    - punctuation.definition.string.begin.shell
- source: s
  scopes:
    - string.unquoted.argument.shell
- source: '|'
- source: getopt
  scopes:
    - string.unquoted.argument.shell
- source: ' |'
- source: ''''''
  scopes:
    - constant.character.escape.nix.shell
- source: $
  scopes:
    - punctuation.definition.variable.shell
- source: '{'
  scopes:
    - punctuation.section.bracket.curly.variable.begin.shell
    - punctuation.definition.variable.shell
- source: getopt
  scopes:
    - meta.parameter-expansion.shell
    - variable.other.normal.shell
- source: '}'
  scopes:
    - punctuation.section.bracket.curly.variable.end.shell
    - punctuation.definition.variable.shell
- source: /bin/getopt
  scopes:
    - string.unquoted.argument.shell
- source: ' |'
- source: '"'
  scopes:
    - punctuation.definition.string.end.shell
  scopesEnd:
    - string.quoted.double.shell
- source: $
  scopes:
    - punctuation.definition.variable.shell
    - variable.other.normal.shell.shell
- source: out
  scopes:
    - variable.other.normal.shell
- source: /bin/autopatchelf
  scopes:
    - string.unquoted.argument.shell
  scopesEnd:
    - meta.argument.shell
- source: chmod
  scopes:
    - meta.statement.command.name.shell
    - entity.name.function.call.shell
    - entity.name.command.shell
- source: +x
  scopesBegin:
    - meta.argument.shell
  scopes:
    - string.unquoted.argument.shell
- source: $
  scopes:
    - punctuation.definition.variable.shell
    - variable.other.normal.shell.shell
- source: out
  scopes:
    - variable.other.normal.shell
- source: /bin/autopatchelf
  scopes:
    - string.unquoted.argument.shell
  scopesEnd:
    - meta.argument.shell
- source: patchShebangs
  scopes:
    - meta.statement.command.name.shell
    - entity.name.function.call.shell
    - entity.name.command.shell
- source: $
  scopesBegin:
    - meta.argument.shell
  scopes:
    - punctuation.definition.variable.shell
    - variable.other.normal.shell.shell
- source: out
  scopes:
    - variable.other.normal.shell
- source: /bin
  scopes:
    - string.unquoted.argument.shell
  scopesEnd:
    - source.shell
    - meta.statement.command.shell
    - meta.argument.shell
- source: ''''''
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
  scopesEnd:
    - string.quoted.other.shell
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.bracket
  scopesEnd:
    - meta.punctuation.section.bracket
    - meta.attribute-set
- source: )
  scopes:
    - punctuation.section.parentheses
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: libs
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: (
  scopes:
    - punctuation.section.parentheses
- source: makeLibraryPath
  scopes:
    - entity.name.function.call
- source: '['
  scopesBegin:
    - meta.list
  scopes:
    - punctuation.definition.list
- source: _pkgs
  scopes:
    - variable.other.object.access
    - variable.parameter
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: glibc
  scopes:
    - variable.other.property.last
- source: _pkgs
  scopes:
    - variable.other.object.access
    - variable.parameter
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: openssl
  scopes:
    - variable.other.property.last
- source: ']'
  scopes:
    - punctuation.definition.list
  scopesEnd:
    - meta.list
- source: )
  scopes:
    - punctuation.section.parentheses
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: gotDeno2
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: (
  scopes:
    - punctuation.section.parentheses
- source: builtins
  scopes:
    - support.module
    - variable.language.special.builtins
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: compareVersions
  scopes:
    - entity.name.function.method
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '2'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: deno
  scopes:
    - variable.other.object.access
    - variable.parameter
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: version
  scopes:
    - variable.other.property.last
- source: )
  scopes:
    - punctuation.section.parentheses
- source: '=='
  scopes:
    - keyword.operator.==
- source: '-'
  scopes:
    - keyword.operator.-
- source: '1'
  scopes:
    - constant.numeric.integer
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: deno_
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: (
  scopes:
    - punctuation.section.parentheses
- source: if
  scopesBegin:
    - meta.punctuation.section.conditional
  scopes:
    - keyword.control.if
- source: gotDeno2
  scopes:
    - meta.punctuation.section.condition
    - variable.other.object
    - variable.parameter
- source: then
  scopes:
    - keyword.control.then
- source: _pkgs
  scopes:
    - variable.other.object.access
    - variable.parameter
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: deno
  scopes:
    - variable.other.property.last
- source: else
  scopes:
    - keyword.control.else
  scopesEnd:
    - meta.punctuation.section.conditional
- source: deno
  scopes:
    - variable.other.object
    - variable.parameter
- source: )
  scopes:
    - punctuation.section.parentheses
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.statement
- source: in
  scopes:
    - keyword.control.in
  scopesEnd:
    - meta.punctuation.section.let
    - meta.let.in.part1
- source: _core
  scopes:
    - variable.other.object.access
    - variable.parameter
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: derivation
  scopes:
    - variable.language.special.property.derivation
    - entity.name.function.call.builtin
    - support.type.builtin.method.derivation
- source: '{'
  scopesBegin:
    - meta.punctuation.section.bracket
  scopes:
    - punctuation.section.bracket
- source: system
  scopesBegin:
    - meta.attribute-set
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: system
  scopesBegin:
    - meta.statement
  scopes:
    - variable.other.object
    - variable.parameter
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: name
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: nvs
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: version
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: 1.4.32
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: builder
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: bash
  scopes:
    - variable.other.object
    - variable.parameter
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: /bin/bash
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: src
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: _src
  scopes:
    - variable.other.object
    - variable.parameter
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: args
  scopesBegin:
    - meta.assignment-start
  scopes:
    - meta.attribute-key
    - entity.other.attribute-name
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment-start
- source: '['
  scopesBegin:
    - meta.list
  scopes:
    - punctuation.definition.list
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.double
- source: '-c'
- source: '"'
  scopes:
    - punctuation.definition.string.double
  scopesEnd:
    - string.quoted.double
- source: ''''''
  scopesBegin:
    - string.quoted.other
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
- source: '                    export PATH="$PATH:'
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: deno_
  scopes:
    - variable.other.object
    - variable.parameter
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: '/bin/:'
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: unzip
  scopes:
    - variable.other.object
    - variable.parameter
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: '/bin:'
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: coreutils
  scopes:
    - variable.other.object
    - variable.parameter
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: /bin"
- source: '                    if [[ "$OSTYPE" == "linux-gnu" ]]; then'
- source: '                        # '
- source: '                        # commands'
- source: '                        # '
- source: '                        mkdir -p "$out/bin"'
- source: '                        mkdir -p "$out/tmp"'
- source: '                        # ls -la "$src/" &> "$out/log.txt"'
- source: '                        # cat "$src/default.nix" &> "$out/log1.1.txt"'
- source: '                        # ls -la "$src/" &> "$out/log1.txt"'
- source: '                        # ls -la "$src/home" &> "$out/log2.txt"'
- source: '                        # ls -la "$src/home/.cache/deno" &> "$out/log3.txt"'
- source: '                        # ls -la $src/main.bundle.js &> "$out/surgon0.txt"'
- source: '                        export TMP="$out/tmp"'
- source: '                        export HOME="$src/home"'
- source: '                        export DENO_NO_UPDATE_CHECK="true"'
- source: '                        "'
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: deno_
  scopes:
    - variable.other.object
    - variable.parameter
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: >-
    /bin/deno" compile --no-lock --allow-all --output "$out/bin/nvs"
    "$src/main.bundle.js" &> "$out/err.log"
- source: '                        libs='
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: libs
  scopes:
    - variable.other.object
    - variable.parameter
- source: '}'
  scopesBegin:
    - punctuation.section.embedded
- source: '${'
  scopesEnd:
    - punctuation.section.embedded
- source: autopatchelf
  scopes:
    - variable.other.object
    - variable.parameter
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: /bin/autopatchelf "$out/bin/nvs"
- source: '                        rm -rf "$TMP"'
- source: '                        rm -f "$out/readme.md"'
- source: '                        rm -f "$out/cp.log"'
- source: '                        rm -f "$out/unzip.log"'
- source: '                        rm -f "$out/err.log"'
- source: '                    elif [ "$(uname)" = "Darwin" ] '
- source: '                    then'
- source: '                        # '
- source: '                        # commands'
- source: '                        # '
- source: '                        export HOME="$out/bin/home"'
- source: '                        mkdir -p "$out/bin"'
- source: '                        "'
- source: '${'
  scopes:
    - punctuation.section.embedded
- source: deno_
  scopes:
    - variable.other.object
    - variable.parameter
- source: '}'
  scopes:
    - punctuation.section.embedded
- source: >-
    /bin/deno" compile --allow-all --quiet --output "$out/bin/nvs"
    "$src/main.bundle.js"
- source: '                        rm -rf "$HOME"'
- source: '                    fi'
- source: '                    rm -rf "$out/tmp"'
- source: '                    rm -rf "$out/home"'
- source: '                    rm -rf "$out/err.log"'
- source: ''''''
  scopes:
    - string.quoted.single
    - punctuation.definition.string.single
  scopesEnd:
    - string.quoted.other
- source: ']'
  scopes:
    - punctuation.definition.list
  scopesEnd:
    - meta.list
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.statement
- source: '}'
  scopes:
    - punctuation.section.bracket
